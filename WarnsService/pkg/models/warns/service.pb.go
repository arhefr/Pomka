// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0
// source: warns/service.proto

package warns

import (
	common "warns/pkg/models/common"
	users "warns/pkg/models/users"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Warn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ModerId       int64                  `protobuf:"varint,3,opt,name=ModerId,proto3" json:"ModerId,omitempty"`
	Reason        *string                `protobuf:"bytes,4,opt,name=Reason,proto3,oneof" json:"Reason,omitempty"`
	IssuedAt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=IssuedAt,proto3" json:"IssuedAt,omitempty"`
	IsActive      bool                   `protobuf:"varint,6,opt,name=IsActive,proto3" json:"IsActive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Warn) Reset() {
	*x = Warn{}
	mi := &file_warns_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Warn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Warn) ProtoMessage() {}

func (x *Warn) ProtoReflect() protoreflect.Message {
	mi := &file_warns_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Warn.ProtoReflect.Descriptor instead.
func (*Warn) Descriptor() ([]byte, []int) {
	return file_warns_service_proto_rawDescGZIP(), []int{0}
}

func (x *Warn) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Warn) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Warn) GetModerId() int64 {
	if x != nil {
		return x.ModerId
	}
	return 0
}

func (x *Warn) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *Warn) GetIssuedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.IssuedAt
	}
	return nil
}

func (x *Warn) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type WarnFailure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Warn          *Warn                  `protobuf:"bytes,1,opt,name=warn,proto3,oneof" json:"warn,omitempty"`
	Failure       *common.Failure        `protobuf:"bytes,2,opt,name=failure,proto3,oneof" json:"failure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WarnFailure) Reset() {
	*x = WarnFailure{}
	mi := &file_warns_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WarnFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarnFailure) ProtoMessage() {}

func (x *WarnFailure) ProtoReflect() protoreflect.Message {
	mi := &file_warns_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WarnFailure.ProtoReflect.Descriptor instead.
func (*WarnFailure) Descriptor() ([]byte, []int) {
	return file_warns_service_proto_rawDescGZIP(), []int{1}
}

func (x *WarnFailure) GetWarn() *Warn {
	if x != nil {
		return x.Warn
	}
	return nil
}

func (x *WarnFailure) GetFailure() *common.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

type AllWarns struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Warns         []*Warn                `protobuf:"bytes,1,rep,name=warns,proto3" json:"warns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllWarns) Reset() {
	*x = AllWarns{}
	mi := &file_warns_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllWarns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllWarns) ProtoMessage() {}

func (x *AllWarns) ProtoReflect() protoreflect.Message {
	mi := &file_warns_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllWarns.ProtoReflect.Descriptor instead.
func (*AllWarns) Descriptor() ([]byte, []int) {
	return file_warns_service_proto_rawDescGZIP(), []int{2}
}

func (x *AllWarns) GetWarns() []*Warn {
	if x != nil {
		return x.Warns
	}
	return nil
}

type AllWarnsFailure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Warns         *AllWarns              `protobuf:"bytes,1,opt,name=warns,proto3,oneof" json:"warns,omitempty"`
	Failure       *common.Failure        `protobuf:"bytes,2,opt,name=failure,proto3,oneof" json:"failure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllWarnsFailure) Reset() {
	*x = AllWarnsFailure{}
	mi := &file_warns_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllWarnsFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllWarnsFailure) ProtoMessage() {}

func (x *AllWarnsFailure) ProtoReflect() protoreflect.Message {
	mi := &file_warns_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllWarnsFailure.ProtoReflect.Descriptor instead.
func (*AllWarnsFailure) Descriptor() ([]byte, []int) {
	return file_warns_service_proto_rawDescGZIP(), []int{3}
}

func (x *AllWarnsFailure) GetWarns() *AllWarns {
	if x != nil {
		return x.Warns
	}
	return nil
}

func (x *AllWarnsFailure) GetFailure() *common.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

type Ban struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ModerId       int64                  `protobuf:"varint,3,opt,name=ModerId,proto3" json:"ModerId,omitempty"`
	Reason        *string                `protobuf:"bytes,4,opt,name=Reason,proto3,oneof" json:"Reason,omitempty"`
	IssuedAt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=IssuedAt,proto3" json:"IssuedAt,omitempty"`
	IsActive      bool                   `protobuf:"varint,6,opt,name=IsActive,proto3" json:"IsActive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ban) Reset() {
	*x = Ban{}
	mi := &file_warns_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ban) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ban) ProtoMessage() {}

func (x *Ban) ProtoReflect() protoreflect.Message {
	mi := &file_warns_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ban.ProtoReflect.Descriptor instead.
func (*Ban) Descriptor() ([]byte, []int) {
	return file_warns_service_proto_rawDescGZIP(), []int{4}
}

func (x *Ban) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Ban) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Ban) GetModerId() int64 {
	if x != nil {
		return x.ModerId
	}
	return 0
}

func (x *Ban) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

func (x *Ban) GetIssuedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.IssuedAt
	}
	return nil
}

func (x *Ban) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type BanFailure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ban           *Ban                   `protobuf:"bytes,1,opt,name=ban,proto3,oneof" json:"ban,omitempty"`
	Failure       *common.Failure        `protobuf:"bytes,2,opt,name=failure,proto3,oneof" json:"failure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BanFailure) Reset() {
	*x = BanFailure{}
	mi := &file_warns_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BanFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanFailure) ProtoMessage() {}

func (x *BanFailure) ProtoReflect() protoreflect.Message {
	mi := &file_warns_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanFailure.ProtoReflect.Descriptor instead.
func (*BanFailure) Descriptor() ([]byte, []int) {
	return file_warns_service_proto_rawDescGZIP(), []int{5}
}

func (x *BanFailure) GetBan() *Ban {
	if x != nil {
		return x.Ban
	}
	return nil
}

func (x *BanFailure) GetFailure() *common.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

type AllBans struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bans          []*Ban                 `protobuf:"bytes,1,rep,name=bans,proto3" json:"bans,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllBans) Reset() {
	*x = AllBans{}
	mi := &file_warns_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllBans) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllBans) ProtoMessage() {}

func (x *AllBans) ProtoReflect() protoreflect.Message {
	mi := &file_warns_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllBans.ProtoReflect.Descriptor instead.
func (*AllBans) Descriptor() ([]byte, []int) {
	return file_warns_service_proto_rawDescGZIP(), []int{6}
}

func (x *AllBans) GetBans() []*Ban {
	if x != nil {
		return x.Bans
	}
	return nil
}

type AllBansFailure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bans          *AllBans               `protobuf:"bytes,1,opt,name=bans,proto3,oneof" json:"bans,omitempty"`
	Failure       *common.Failure        `protobuf:"bytes,2,opt,name=failure,proto3,oneof" json:"failure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllBansFailure) Reset() {
	*x = AllBansFailure{}
	mi := &file_warns_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllBansFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllBansFailure) ProtoMessage() {}

func (x *AllBansFailure) ProtoReflect() protoreflect.Message {
	mi := &file_warns_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllBansFailure.ProtoReflect.Descriptor instead.
func (*AllBansFailure) Descriptor() ([]byte, []int) {
	return file_warns_service_proto_rawDescGZIP(), []int{7}
}

func (x *AllBansFailure) GetBans() *AllBans {
	if x != nil {
		return x.Bans
	}
	return nil
}

func (x *AllBansFailure) GetFailure() *common.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

type CountOfActiveWarns struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CountWarns    int32                  `protobuf:"varint,1,opt,name=countWarns,proto3" json:"countWarns,omitempty"`
	Failure       *common.Failure        `protobuf:"bytes,2,opt,name=failure,proto3,oneof" json:"failure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountOfActiveWarns) Reset() {
	*x = CountOfActiveWarns{}
	mi := &file_warns_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountOfActiveWarns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountOfActiveWarns) ProtoMessage() {}

func (x *CountOfActiveWarns) ProtoReflect() protoreflect.Message {
	mi := &file_warns_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountOfActiveWarns.ProtoReflect.Descriptor instead.
func (*CountOfActiveWarns) Descriptor() ([]byte, []int) {
	return file_warns_service_proto_rawDescGZIP(), []int{8}
}

func (x *CountOfActiveWarns) GetCountWarns() int32 {
	if x != nil {
		return x.CountWarns
	}
	return 0
}

func (x *CountOfActiveWarns) GetFailure() *common.Failure {
	if x != nil {
		return x.Failure
	}
	return nil
}

type ModerUserReason struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ModerId       int64                  `protobuf:"varint,2,opt,name=ModerId,proto3" json:"ModerId,omitempty"`
	Reason        *string                `protobuf:"bytes,3,opt,name=Reason,proto3,oneof" json:"Reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModerUserReason) Reset() {
	*x = ModerUserReason{}
	mi := &file_warns_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModerUserReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModerUserReason) ProtoMessage() {}

func (x *ModerUserReason) ProtoReflect() protoreflect.Message {
	mi := &file_warns_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModerUserReason.ProtoReflect.Descriptor instead.
func (*ModerUserReason) Descriptor() ([]byte, []int) {
	return file_warns_service_proto_rawDescGZIP(), []int{9}
}

func (x *ModerUserReason) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ModerUserReason) GetModerId() int64 {
	if x != nil {
		return x.ModerId
	}
	return 0
}

func (x *ModerUserReason) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

var File_warns_service_proto protoreflect.FileDescriptor

const file_warns_service_proto_rawDesc = "" +
	"\n" +
	"\x13warns/service.proto\x12\x05warns\x1a\x12common/types.proto\x1a\x13users/service.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc4\x01\n" +
	"\x04Warn\x12\x0e\n" +
	"\x02Id\x18\x01 \x01(\x03R\x02Id\x12\x16\n" +
	"\x06UserId\x18\x02 \x01(\x03R\x06UserId\x12\x18\n" +
	"\aModerId\x18\x03 \x01(\x03R\aModerId\x12\x1b\n" +
	"\x06Reason\x18\x04 \x01(\tH\x00R\x06Reason\x88\x01\x01\x126\n" +
	"\bIssuedAt\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\bIssuedAt\x12\x1a\n" +
	"\bIsActive\x18\x06 \x01(\bR\bIsActiveB\t\n" +
	"\a_Reason\"x\n" +
	"\vWarnFailure\x12$\n" +
	"\x04warn\x18\x01 \x01(\v2\v.warns.WarnH\x00R\x04warn\x88\x01\x01\x12.\n" +
	"\afailure\x18\x02 \x01(\v2\x0f.common.FailureH\x01R\afailure\x88\x01\x01B\a\n" +
	"\x05_warnB\n" +
	"\n" +
	"\b_failure\"-\n" +
	"\bAllWarns\x12!\n" +
	"\x05warns\x18\x01 \x03(\v2\v.warns.WarnR\x05warns\"\x83\x01\n" +
	"\x0fAllWarnsFailure\x12*\n" +
	"\x05warns\x18\x01 \x01(\v2\x0f.warns.AllWarnsH\x00R\x05warns\x88\x01\x01\x12.\n" +
	"\afailure\x18\x02 \x01(\v2\x0f.common.FailureH\x01R\afailure\x88\x01\x01B\b\n" +
	"\x06_warnsB\n" +
	"\n" +
	"\b_failure\"\xc3\x01\n" +
	"\x03Ban\x12\x0e\n" +
	"\x02Id\x18\x01 \x01(\x03R\x02Id\x12\x16\n" +
	"\x06UserId\x18\x02 \x01(\x03R\x06UserId\x12\x18\n" +
	"\aModerId\x18\x03 \x01(\x03R\aModerId\x12\x1b\n" +
	"\x06Reason\x18\x04 \x01(\tH\x00R\x06Reason\x88\x01\x01\x126\n" +
	"\bIssuedAt\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\bIssuedAt\x12\x1a\n" +
	"\bIsActive\x18\x06 \x01(\bR\bIsActiveB\t\n" +
	"\a_Reason\"s\n" +
	"\n" +
	"BanFailure\x12!\n" +
	"\x03ban\x18\x01 \x01(\v2\n" +
	".warns.BanH\x00R\x03ban\x88\x01\x01\x12.\n" +
	"\afailure\x18\x02 \x01(\v2\x0f.common.FailureH\x01R\afailure\x88\x01\x01B\x06\n" +
	"\x04_banB\n" +
	"\n" +
	"\b_failure\")\n" +
	"\aAllBans\x12\x1e\n" +
	"\x04bans\x18\x01 \x03(\v2\n" +
	".warns.BanR\x04bans\"~\n" +
	"\x0eAllBansFailure\x12'\n" +
	"\x04bans\x18\x01 \x01(\v2\x0e.warns.AllBansH\x00R\x04bans\x88\x01\x01\x12.\n" +
	"\afailure\x18\x02 \x01(\v2\x0f.common.FailureH\x01R\afailure\x88\x01\x01B\a\n" +
	"\x05_bansB\n" +
	"\n" +
	"\b_failure\"p\n" +
	"\x12CountOfActiveWarns\x12\x1e\n" +
	"\n" +
	"countWarns\x18\x01 \x01(\x05R\n" +
	"countWarns\x12.\n" +
	"\afailure\x18\x02 \x01(\v2\x0f.common.FailureH\x00R\afailure\x88\x01\x01B\n" +
	"\n" +
	"\b_failure\"k\n" +
	"\x0fModerUserReason\x12\x16\n" +
	"\x06UserId\x18\x01 \x01(\x03R\x06UserId\x12\x18\n" +
	"\aModerId\x18\x02 \x01(\x03R\aModerId\x12\x1b\n" +
	"\x06Reason\x18\x03 \x01(\tH\x00R\x06Reason\x88\x01\x01B\t\n" +
	"\a_Reason2\x9b\x04\n" +
	"\x05Warns\x122\n" +
	"\x04Warn\x12\x16.warns.ModerUserReason\x1a\x12.warns.WarnFailure\x125\n" +
	"\tAllUnWarn\x12\x16.warns.ModerUserReason\x1a\x10.common.Response\x126\n" +
	"\n" +
	"LastUnWarn\x12\x16.warns.ModerUserReason\x1a\x10.common.Response\x120\n" +
	"\x03Ban\x12\x16.warns.ModerUserReason\x1a\x11.warns.BanFailure\x121\n" +
	"\x05Unban\x12\x16.warns.ModerUserReason\x1a\x10.common.Response\x124\n" +
	"\x0fGetHistoryWarns\x12\t.users.Id\x1a\x16.warns.AllWarnsFailure\x122\n" +
	"\x0eGetHistoryBans\x12\t.users.Id\x1a\x15.warns.AllBansFailure\x123\n" +
	"\x0eGetActiveWarns\x12\t.users.Id\x1a\x16.warns.AllWarnsFailure\x12,\n" +
	"\fGetActiveBan\x12\t.users.Id\x1a\x11.warns.BanFailure\x12=\n" +
	"\x15GetCountOfActiveWarns\x12\t.users.Id\x1a\x19.warns.CountOfActiveWarnsB\tZ\a./warnsb\x06proto3"

var (
	file_warns_service_proto_rawDescOnce sync.Once
	file_warns_service_proto_rawDescData []byte
)

func file_warns_service_proto_rawDescGZIP() []byte {
	file_warns_service_proto_rawDescOnce.Do(func() {
		file_warns_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_warns_service_proto_rawDesc), len(file_warns_service_proto_rawDesc)))
	})
	return file_warns_service_proto_rawDescData
}

var file_warns_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_warns_service_proto_goTypes = []any{
	(*Warn)(nil),                  // 0: warns.Warn
	(*WarnFailure)(nil),           // 1: warns.WarnFailure
	(*AllWarns)(nil),              // 2: warns.AllWarns
	(*AllWarnsFailure)(nil),       // 3: warns.AllWarnsFailure
	(*Ban)(nil),                   // 4: warns.Ban
	(*BanFailure)(nil),            // 5: warns.BanFailure
	(*AllBans)(nil),               // 6: warns.AllBans
	(*AllBansFailure)(nil),        // 7: warns.AllBansFailure
	(*CountOfActiveWarns)(nil),    // 8: warns.CountOfActiveWarns
	(*ModerUserReason)(nil),       // 9: warns.ModerUserReason
	(*timestamppb.Timestamp)(nil), // 10: google.protobuf.Timestamp
	(*common.Failure)(nil),        // 11: common.Failure
	(*users.Id)(nil),              // 12: users.Id
	(*common.Response)(nil),       // 13: common.Response
}
var file_warns_service_proto_depIdxs = []int32{
	10, // 0: warns.Warn.IssuedAt:type_name -> google.protobuf.Timestamp
	0,  // 1: warns.WarnFailure.warn:type_name -> warns.Warn
	11, // 2: warns.WarnFailure.failure:type_name -> common.Failure
	0,  // 3: warns.AllWarns.warns:type_name -> warns.Warn
	2,  // 4: warns.AllWarnsFailure.warns:type_name -> warns.AllWarns
	11, // 5: warns.AllWarnsFailure.failure:type_name -> common.Failure
	10, // 6: warns.Ban.IssuedAt:type_name -> google.protobuf.Timestamp
	4,  // 7: warns.BanFailure.ban:type_name -> warns.Ban
	11, // 8: warns.BanFailure.failure:type_name -> common.Failure
	4,  // 9: warns.AllBans.bans:type_name -> warns.Ban
	6,  // 10: warns.AllBansFailure.bans:type_name -> warns.AllBans
	11, // 11: warns.AllBansFailure.failure:type_name -> common.Failure
	11, // 12: warns.CountOfActiveWarns.failure:type_name -> common.Failure
	9,  // 13: warns.Warns.Warn:input_type -> warns.ModerUserReason
	9,  // 14: warns.Warns.AllUnWarn:input_type -> warns.ModerUserReason
	9,  // 15: warns.Warns.LastUnWarn:input_type -> warns.ModerUserReason
	9,  // 16: warns.Warns.Ban:input_type -> warns.ModerUserReason
	9,  // 17: warns.Warns.Unban:input_type -> warns.ModerUserReason
	12, // 18: warns.Warns.GetHistoryWarns:input_type -> users.Id
	12, // 19: warns.Warns.GetHistoryBans:input_type -> users.Id
	12, // 20: warns.Warns.GetActiveWarns:input_type -> users.Id
	12, // 21: warns.Warns.GetActiveBan:input_type -> users.Id
	12, // 22: warns.Warns.GetCountOfActiveWarns:input_type -> users.Id
	1,  // 23: warns.Warns.Warn:output_type -> warns.WarnFailure
	13, // 24: warns.Warns.AllUnWarn:output_type -> common.Response
	13, // 25: warns.Warns.LastUnWarn:output_type -> common.Response
	5,  // 26: warns.Warns.Ban:output_type -> warns.BanFailure
	13, // 27: warns.Warns.Unban:output_type -> common.Response
	3,  // 28: warns.Warns.GetHistoryWarns:output_type -> warns.AllWarnsFailure
	7,  // 29: warns.Warns.GetHistoryBans:output_type -> warns.AllBansFailure
	3,  // 30: warns.Warns.GetActiveWarns:output_type -> warns.AllWarnsFailure
	5,  // 31: warns.Warns.GetActiveBan:output_type -> warns.BanFailure
	8,  // 32: warns.Warns.GetCountOfActiveWarns:output_type -> warns.CountOfActiveWarns
	23, // [23:33] is the sub-list for method output_type
	13, // [13:23] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_warns_service_proto_init() }
func file_warns_service_proto_init() {
	if File_warns_service_proto != nil {
		return
	}
	file_warns_service_proto_msgTypes[0].OneofWrappers = []any{}
	file_warns_service_proto_msgTypes[1].OneofWrappers = []any{}
	file_warns_service_proto_msgTypes[3].OneofWrappers = []any{}
	file_warns_service_proto_msgTypes[4].OneofWrappers = []any{}
	file_warns_service_proto_msgTypes[5].OneofWrappers = []any{}
	file_warns_service_proto_msgTypes[7].OneofWrappers = []any{}
	file_warns_service_proto_msgTypes[8].OneofWrappers = []any{}
	file_warns_service_proto_msgTypes[9].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_warns_service_proto_rawDesc), len(file_warns_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_warns_service_proto_goTypes,
		DependencyIndexes: file_warns_service_proto_depIdxs,
		MessageInfos:      file_warns_service_proto_msgTypes,
	}.Build()
	File_warns_service_proto = out.File
	file_warns_service_proto_goTypes = nil
	file_warns_service_proto_depIdxs = nil
}
